<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.sakaiproject.nakamura</groupId>
		<artifactId>base</artifactId>
		<version>1.5.0-SNAPSHOT</version>
	</parent>
	
	<artifactId>org.sakaiproject.nakamura.jax-doclets</artifactId>
	<version>0.10.1</version>

	<dependencies>
		<dependency>
			<groupId>com.lunatech.jax-doclets</groupId>
			<artifactId>doclets</artifactId>
			<version>0.10.0</version>
		</dependency>
		<dependency>
			<groupId>javax.ws.rs</groupId>
			<artifactId>jsr311-api</artifactId>
			<version>1.1</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.0-api</artifactId>
			<version>1.0.1.Final</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>3.6.0.Final</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jaxrs</artifactId>
			<version>2.0.0.GA</version>
      <optional>true</optional>
		</dependency>
		<!-- Do no remove the following two dependencies because they are required by hibernate-core which is
		     used as docletArtifact and the javadoc plugin can't resolve them because it doesn't use our own
		     repo list. It only uses central and they are not there. So we depend on them here so that Maven
		     will download them and the javadoc plugin can resolve them.
		-->
		<dependency>
			<groupId>javax.security</groupId>
			<artifactId>jacc</artifactId>
			<scope>provided</scope>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>javax.security</groupId>
			<artifactId>jaas</artifactId>
			<scope>provided</scope>
			<version>1.0.01</version>
		</dependency>
	</dependencies>
	
	<!-- Only depend on the tools.jar for the Sun JDK. See http://maven.apache.org/general.html#tools-jar-dependency -->
	<profiles>
		<profile>
			<id>default-tools.jar</id>
			<activation>
				<property>
					<name>java.vendor</name>
					<value>Sun Microsystems Inc.</value>
				</property>
			</activation>
			<dependencies>
				<dependency>
					<groupId>com.sun</groupId>
					<artifactId>tools</artifactId>
				</dependency>
			</dependencies>
		</profile>
	</profiles>
	
	<repositories>
		<repository>
			<id>jboss</id>
			<name>JBoss Repo</name>
			<url>https://repository.jboss.org/nexus/content/repositories/releases</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>jboss-3dparty</id>
			<name>JBoss Repo</name>
			<url>https://repository.jboss.org/nexus/content/repositories/thirdparty-releases</url>
		</repository>
		<repository>
			<id>exo</id>
			<url>http://repository.exoplatform.org/public</url>
		</repository>
	</repositories>
	
	<build>
		<plugins>
			<!-- Just because our classes are named with Test in there doesn't mean they are unit tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.9</version>
				<configuration>
					<excludes>
						<exclude>**/*.java</exclude>
					</excludes>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
